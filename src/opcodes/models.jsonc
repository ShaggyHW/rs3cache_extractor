["struct",
	["format","ubyte"],
	["version","ubyte"],
	["always_0f","ubyte"],

	["meshCount","ubyte"],
	["unkCount0","ubyte"],
	["unkCount1","ubyte"],
	["unkCount2","ubyte"],
	["unkCount3","ubyte"],
	["unkCount4",["match",{"version>=5":"ubyte","other":0}]],

	["meshes",["opt","version<=3",["array",["ref","meshCount"],["struct",
		["$groupFlags","ubyte"],
		["unkint","uint"],
		["materialArgument","ushort le"],
		["faceCount","ushort le"],

		["hasVertices",["ref","$groupFlags",[0,1]]],
		["hasVertexAlpha",["ref","$groupFlags",[1,1]]],
		["hasFaceBones",["ref","$groupFlags",[2,1]]],
		["hasBoneIds",["ref","$groupFlags",[3,1]]],
		["isHidden",["ref","$groupFlags",[4,1]]],
		["hasSkin",["ref","$groupFlags",[5,1]]],

		
		["colourBuffer",["opt",["hasVertices",1],["buffer",["ref","faceCount"],"ushort"]]],
		["alphaBuffer",["opt",["hasVertexAlpha",1],["buffer",["ref","faceCount"],"ubyte"]]],
		["faceboneidBuffer",["opt",["hasFaceBones",1],["buffer",["ref","faceCount"],"ushort"]]],

		//the length field for the indexbuffer can overflow when the model has >22k faces!!
		//unclear if the the client has some alternative way to get it
		["indexBuffers",["array","ubyte",["buffer","ushort le","ushort"]]],

		["vertexCount",["match",["ref","hasVertices"],{"=1":"ushort le","=0":0}]],
		["positionBuffer",["opt",["hasVertices",1],["buffer",["ref","vertexCount"],"short",3]]],
		["normalBuffer",["opt",["hasVertices",1],["match","buildnr",{
			">=887":["buffer",["ref","vertexCount"],"byte",3],
			">=0":["buffer",["ref","vertexCount"],"short",3]
		}]]],
		["tagentBuffer",["opt",["hasVertices",1],["match","buildnr",{
			//TODO exact buildnr unknown
			">=906":["buffer",["ref","vertexCount"],"short",2],
			">=0":"null"
		}]]],
		["uvBuffer",["opt",["hasVertices",1],["match","buildnr",{
			">=887":["buffer",["ref","vertexCount"],"ushort",2],
			">=0":["buffer",["ref","vertexCount"],"float",2]
		}]]],
		["boneidBuffer",["opt",["hasBoneIds",1],["buffer",["ref","vertexCount"],"ushort"]]],
		
		["skin",["opt",["hasSkin",1],["struct",
			["skinWeightCount","uint le"],
			["skinBoneBuffer",["buffer",["ref","skinWeightCount"],"ushort",1]],
			["skinWeightBuffer",["buffer",["ref","skinWeightCount"],"ubyte",1]]
		]]]
	]]]],
	["meshdata",["opt","version>3",["struct",
		["$groupFlags","ubyte"],
		["unkint","ubyte"],
		["faceCount","ushort le"],

		["hasVertices",["ref","$groupFlags",[0,1]]],
		["hasVertexAlpha",["ref","$groupFlags",[1,1]]],
		["hasFaceBones",["ref","$groupFlags",[2,1]]],
		["hasBoneIds",["ref","$groupFlags",[3,1]]],
		["isHidden",["ref","$groupFlags",[4,1]]],
		["hasSkin",["ref","$groupFlags",[5,1]]],

		["vertexCount","uint le"],
		["positionBuffer",["opt",["hasVertices",1],["buffer",["ref","vertexCount"],"short",3]]],
		["normalBuffer",["opt",["hasVertices",1],["buffer",["ref","vertexCount"],"byte",3]]],
		["tagentBuffer",["opt",["hasVertices",1],["buffer",["ref","vertexCount"],"short",2]]],
		["uvBuffer",["opt",["hasVertices",1],["buffer",["ref","vertexCount"],"ushort",2]]],
		["boneidBuffer",["opt",["hasBoneIds",1],["buffer",["ref","vertexCount"],"ushort"]]],
		
		["skin",["opt","hasSkin==1",["array",["ref","vertexCount"],["struct",
			["ids",["array","ushort le","ushort le"]],
			["weights",["array","ushort le","ubyte"]]
		]]]],
		["vertexColours",["opt","hasVertices==1",["buffer",["ref","vertexCount"],"ushort"]]],
		["vertexAlpha",["opt","hasVertices==1",["buffer",["ref","vertexCount"],"ubyte"]]],
		["vertexFacebones",["opt","hasFaceBones==1",["buffer",["ref","vertexCount"],"ushort"]]],
		["renders",["array",["ref","meshCount"],["struct",
			["$groupFlags","ubyte"],
			["hasVertices",["ref","$groupFlags",[0,1]]],
			["hasVertexAlpha",["ref","$groupFlags",[1,1]]],
			["hasFaceBones",["ref","$groupFlags",[2,1]]],
			["hasBoneIds",["ref","$groupFlags",[3,1]]],
			["isHidden",["ref","$groupFlags",[4,1]]],
			["hasSkin",["ref","$groupFlags",[5,1]]],
			
			["unkint","uint"],
			["materialArgument","ushort le"],
			["unkbyte2","ubyte"],
			//this might be groupflags&0x80 for uint indexbuffer
			["buf",["match",{
				"vertexCount<=0xffff":["buffer","ushort le","ushort"],//u16 little endian
				"other":["buffer","ushort le","uint"]//u32 big endian?????
			}]]
		]]]
	]]],

	["unk1Buffer",["array",["ref","unkCount1"],["buffer",["match","buildnr",{">=923":39,">=0":37}],"hex"]]],
	["unk2Buffer",["array",["ref","unkCount2"],["buffer",["match","buildnr",{">=923":50,">=0":44}],"hex"]]],
	["unk3Buffer",["array",["ref","unkCount3"],["buffer",["match","buildnr",{">=923":18,">=0":16}],"hex"]]],
	["unk4Buffer",["array",["ref","unkCount4"],["buffer",0]]]
]